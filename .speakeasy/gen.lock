lockVersion: 2.0.0
id: 9c76d982-a275-4b45-a46b-dccb6e2cffe9
management:
  docChecksum: acc4c90fc4b614946193b46937ffde52
  docVersion: 1.0.0
  speakeasyVersion: 1.423.4
  generationVersion: 2.445.1
  releaseVersion: 1.2.0
  configChecksum: 5cdec40dba7a9a30dd40756f34174040
  repoURL: https://github.com/ragieai/ragie-typescript.git
  installationURL: https://github.com/ragieai/ragie-typescript
  published: true
features:
  typescript:
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.1.11
    core: 3.18.2
    defaultEnabledRetries: 0.1.0
    devContainers: 2.90.0
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.1.1
    globalSecurity: 2.82.11
    globalSecurityCallbacks: 0.1.0
    globalSecurityFlattening: 0.1.0
    globalServerURLs: 2.82.4
    methodArguments: 0.1.2
    nameOverrides: 2.81.2
    nullables: 0.1.0
    pagination: 2.82.7
    responseFormat: 0.2.3
    retries: 2.83.0
    sdkHooks: 0.1.0
    unions: 2.85.7
    uploadStreams: 0.1.0
    webhooks: 1.0.0
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .eslintrc.cjs
  - .gitattributes
  - .npmignore
  - CONTRIBUTING.md
  - FUNCTIONS.md
  - RUNTIMES.md
  - USAGE.md
  - docs/lib/utils/retryconfig.md
  - docs/models/components/createdocumentfromurlparams.md
  - docs/models/components/createdocumentfromurlparamsmetadata.md
  - docs/models/components/createdocumentfromurlparamsmode.md
  - docs/models/components/createdocumentparams.md
  - docs/models/components/createdocumentrawparams.md
  - docs/models/components/createdocumentrawparamsmetadata.md
  - docs/models/components/createinstructionparams.md
  - docs/models/components/createinstructionparamsfilter.md
  - docs/models/components/createinstructionparamsscope.md
  - docs/models/components/data.md
  - docs/models/components/data2.md
  - docs/models/components/document.md
  - docs/models/components/documentdelete.md
  - docs/models/components/documentdeletewebhook.md
  - docs/models/components/documentdeletewebhookpayload.md
  - docs/models/components/documentdeletewebhookpayloadmetadata.md
  - docs/models/components/documentdeletewebhooktype.md
  - docs/models/components/documentfileupdate.md
  - docs/models/components/documentget.md
  - docs/models/components/documentgetmetadata.md
  - docs/models/components/documentlist.md
  - docs/models/components/documentmetadata.md
  - docs/models/components/documentmetadataupdate.md
  - docs/models/components/documentmetadataupdatemetadata.md
  - docs/models/components/documentrawupdate.md
  - docs/models/components/documentsummary.md
  - docs/models/components/documentupdatewebhook.md
  - docs/models/components/documentupdatewebhookpayload.md
  - docs/models/components/documentupdatewebhookpayloadmetadata.md
  - docs/models/components/entity.md
  - docs/models/components/entityextractedwebhook.md
  - docs/models/components/entityextractedwebhookpayload.md
  - docs/models/components/entityextractedwebhookpayloaddata.md
  - docs/models/components/entityextractedwebhookpayloaddocumentmetadata.md
  - docs/models/components/entityextractedwebhooktype.md
  - docs/models/components/entitylist.md
  - docs/models/components/filet.md
  - docs/models/components/filter.md
  - docs/models/components/instruction.md
  - docs/models/components/loc.md
  - docs/models/components/metadata.md
  - docs/models/components/mode.md
  - docs/models/components/one.md
  - docs/models/components/pagination.md
  - docs/models/components/patchdocumentmetadataparams.md
  - docs/models/components/patchdocumentmetadataparamsmetadata.md
  - docs/models/components/retrieval.md
  - docs/models/components/retrieveparams.md
  - docs/models/components/scope.md
  - docs/models/components/scoredchunk.md
  - docs/models/components/security.md
  - docs/models/components/status.md
  - docs/models/components/status2.md
  - docs/models/components/two.md
  - docs/models/components/type.md
  - docs/models/components/updatedocumentfileparams.md
  - docs/models/components/updatedocumentfileparamsfile.md
  - docs/models/components/updatedocumentfileparamsmode.md
  - docs/models/components/updatedocumentrawparams.md
  - docs/models/components/updatedocumentrawparamsdata.md
  - docs/models/components/updateinstructionparams.md
  - docs/models/components/validationerror.md
  - docs/models/errors/errormessage.md
  - docs/models/errors/httpvalidationerror.md
  - docs/models/operations/deletedocumentrequest.md
  - docs/models/operations/getdocumentrequest.md
  - docs/models/operations/getdocumentsummaryrequest.md
  - docs/models/operations/listdocumentsrequest.md
  - docs/models/operations/listdocumentsresponse.md
  - docs/models/operations/listentitiesbydocumentrequest.md
  - docs/models/operations/listentitiesbydocumentresponse.md
  - docs/models/operations/listentitiesbyinstructionrequest.md
  - docs/models/operations/listentitiesbyinstructionresponse.md
  - docs/models/operations/patchdocumentmetadatarequest.md
  - docs/models/operations/updatedocumentfilerequest.md
  - docs/models/operations/updatedocumentrawrequest.md
  - docs/models/operations/updateinstructionrequest.md
  - docs/models/webhooks/eventeventpostbody.md
  - docs/sdks/documents/README.md
  - docs/sdks/entities/README.md
  - docs/sdks/ragie/README.md
  - docs/sdks/retrievals/README.md
  - jsr.json
  - package.json
  - src/core.ts
  - src/funcs/documentsCreate.ts
  - src/funcs/documentsCreateDocumentFromUrl.ts
  - src/funcs/documentsCreateRaw.ts
  - src/funcs/documentsDelete.ts
  - src/funcs/documentsGet.ts
  - src/funcs/documentsGetSummary.ts
  - src/funcs/documentsList.ts
  - src/funcs/documentsPatchMetadata.ts
  - src/funcs/documentsUpdateFile.ts
  - src/funcs/documentsUpdateRaw.ts
  - src/funcs/entitiesCreateInstruction.ts
  - src/funcs/entitiesListByDocument.ts
  - src/funcs/entitiesListByInstruction.ts
  - src/funcs/entitiesListInstructions.ts
  - src/funcs/entitiesUpdateInstruction.ts
  - src/funcs/retrievalsRetrieve.ts
  - src/hooks/hooks.ts
  - src/hooks/index.ts
  - src/hooks/types.ts
  - src/index.ts
  - src/lib/base64.ts
  - src/lib/config.ts
  - src/lib/dlv.ts
  - src/lib/encodings.ts
  - src/lib/files.ts
  - src/lib/http.ts
  - src/lib/is-plain-object.ts
  - src/lib/logger.ts
  - src/lib/matchers.ts
  - src/lib/primitives.ts
  - src/lib/retries.ts
  - src/lib/schemas.ts
  - src/lib/sdks.ts
  - src/lib/security.ts
  - src/lib/url.ts
  - src/models/components/createdocumentfromurlparams.ts
  - src/models/components/createdocumentparams.ts
  - src/models/components/createdocumentrawparams.ts
  - src/models/components/createinstructionparams.ts
  - src/models/components/document.ts
  - src/models/components/documentdelete.ts
  - src/models/components/documentdeletewebhook.ts
  - src/models/components/documentdeletewebhookpayload.ts
  - src/models/components/documentfileupdate.ts
  - src/models/components/documentget.ts
  - src/models/components/documentlist.ts
  - src/models/components/documentmetadataupdate.ts
  - src/models/components/documentrawupdate.ts
  - src/models/components/documentsummary.ts
  - src/models/components/documentupdatewebhook.ts
  - src/models/components/documentupdatewebhookpayload.ts
  - src/models/components/entity.ts
  - src/models/components/entityextractedwebhook.ts
  - src/models/components/entityextractedwebhookpayload.ts
  - src/models/components/entitylist.ts
  - src/models/components/index.ts
  - src/models/components/instruction.ts
  - src/models/components/pagination.ts
  - src/models/components/patchdocumentmetadataparams.ts
  - src/models/components/retrieval.ts
  - src/models/components/retrieveparams.ts
  - src/models/components/scoredchunk.ts
  - src/models/components/security.ts
  - src/models/components/updatedocumentfileparams.ts
  - src/models/components/updatedocumentrawparams.ts
  - src/models/components/updateinstructionparams.ts
  - src/models/components/validationerror.ts
  - src/models/errors/errormessage.ts
  - src/models/errors/httpclienterrors.ts
  - src/models/errors/httpvalidationerror.ts
  - src/models/errors/index.ts
  - src/models/errors/sdkerror.ts
  - src/models/errors/sdkvalidationerror.ts
  - src/models/operations/deletedocument.ts
  - src/models/operations/getdocument.ts
  - src/models/operations/getdocumentsummary.ts
  - src/models/operations/index.ts
  - src/models/operations/listdocuments.ts
  - src/models/operations/listentitiesbydocument.ts
  - src/models/operations/listentitiesbyinstruction.ts
  - src/models/operations/patchdocumentmetadata.ts
  - src/models/operations/updatedocumentfile.ts
  - src/models/operations/updatedocumentraw.ts
  - src/models/operations/updateinstruction.ts
  - src/models/webhooks/eventeventpost.ts
  - src/models/webhooks/index.ts
  - src/sdk/documents.ts
  - src/sdk/entities.ts
  - src/sdk/index.ts
  - src/sdk/retrievals.ts
  - src/sdk/sdk.ts
  - src/types/blobs.ts
  - src/types/constdatetime.ts
  - src/types/enums.ts
  - src/types/fp.ts
  - src/types/index.ts
  - src/types/operations.ts
  - src/types/rfcdate.ts
  - src/types/streams.ts
  - tsconfig.json
examples:
  CreateDocument:
    speakeasy-default-create-document:
      requestBody:
        multipart/form-data: {"file": {}}
      responses:
        "201":
          application/json: {"id": "7a621cf0-21cd-49cf-8540-3315211a509a", "created_at": "2022-01-18T01:06:03.366Z", "updated_at": "2023-07-28T18:44:31.482Z", "status": "<value>", "name": "<value>", "metadata": {}, "partition": "<value>"}
        "400":
          application/json: {"detail": "<value>"}
        "422": {}
  ListDocuments:
    speakeasy-default-list-documents:
      parameters:
        query:
          filter: "{\"department\":{\"$in\":[\"sales\",\"marketing\"]}}"
        header: {}
      responses:
        "200":
          application/json: {"documents": [{"id": "8a232aa0-b11b-48a0-8057-1e9e705d0e6e", "created_at": "2022-03-24T06:20:14.879Z", "updated_at": "2024-09-10T04:30:13.188Z", "status": "<value>", "name": "<value>", "metadata": {}, "partition": "<value>"}, {"id": "766718d6-d461-42e0-aaee-1b9ddf121dc2", "created_at": "2022-11-08T21:35:05.868Z", "updated_at": "2024-05-06T10:10:32.094Z", "status": "<value>", "name": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}, "partition": "<value>"}, {"id": "4fb451a7-0cfc-48fe-807f-bc60ab960d56", "created_at": "2022-05-09T15:43:49.850Z", "updated_at": "2024-10-31T06:20:54.910Z", "status": "<value>", "name": "<value>", "metadata": {"key": 370293, "key1": 212921, "key2": []}, "partition": "<value>"}]}
        "401":
          application/json: {"detail": "<value>"}
        "422": {}
  CreateDocumentRaw:
    speakeasy-default-create-document-raw:
      requestBody:
        application/json: {"data": "<value>", "partition": "<value>"}
      responses:
        "201":
          application/json: {"id": "f32d8f20-2af5-4fe3-9301-884a461abb5d", "created_at": "2024-10-07T02:25:22.865Z", "updated_at": "2024-07-13T21:12:32.248Z", "status": "<value>", "name": "<value>", "metadata": {"key": 391493, "key1": 816075, "key2": true}, "partition": "<value>"}
        "400":
          application/json: {"detail": "<value>"}
        "422": {}
  CreateDocumentFromUrl:
    speakeasy-default-create-document-from-url:
      requestBody:
        application/json: {"url": "https://scientific-plain.biz/", "partition": "<value>"}
      responses:
        "201":
          application/json: {"id": "0adf151b-6a78-4e39-a7b3-465615a95443", "created_at": "2022-07-13T10:16:17.094Z", "updated_at": "2024-05-24T16:33:21.360Z", "status": "<value>", "name": "<value>", "metadata": {}, "partition": "<value>"}
        "400":
          application/json: {"detail": "<value>"}
        "422": {}
  GetDocument:
    speakeasy-default-get-document:
      parameters:
        path:
          document_id: "<DOCUMENT_ID>"
      responses:
        "200":
          application/json: {"id": "b888f774-3e7c-4135-a18c-6b985523c4bc", "created_at": "2024-09-23T09:26:26.647Z", "updated_at": "2022-12-22T20:41:29.028Z", "status": "<value>", "name": "<value>", "metadata": {}, "partition": "<value>", "errors": ["<value>", "<value>", "<value>"]}
        "401":
          application/json: {"detail": "<value>"}
        "422": {}
  DeleteDocument:
    speakeasy-default-delete-document:
      parameters:
        path:
          document_id: "<DOCUMENT_ID>"
      responses:
        "200":
          application/json: {"status": "<value>"}
        "401":
          application/json: {"detail": "<value>"}
        "422": {}
  UpdateDocumentFile:
    speakeasy-default-update-document-file:
      parameters:
        path:
          document_id: "<DOCUMENT_ID>"
      requestBody:
        multipart/form-data: {"file": {}}
      responses:
        "200":
          application/json: {"status": "<value>"}
        "401":
          application/json: {"detail": "<value>"}
        "422": {}
  UpdateDocumentRaw:
    speakeasy-default-update-document-raw:
      parameters:
        path:
          document_id: "<DOCUMENT_ID>"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"status": "<value>"}
        "401":
          application/json: {"detail": "<value>"}
        "422": {}
  PatchDocumentMetadata:
    speakeasy-default-patch-document-metadata:
      parameters:
        path:
          document_id: "<DOCUMENT_ID>"
      requestBody:
        application/json: {"metadata": {"classified": "null (setting null deletes key from metadata)", "editors": ["Alice", "Bob"], "title": "declassified report", "updated_at": 1714491736216}}
      responses:
        "200":
          application/json: {"metadata": {"editors": ["Alice", "Bob"], "title": "declassified report", "unchanged_key": "unchanged_value", "updated_at": 1714491736216}}
        "401":
          application/json: {"detail": "<value>"}
        "422": {}
  GetDocumentSummary:
    speakeasy-default-get-document-summary:
      parameters:
        path:
          document_id: "<DOCUMENT_ID>"
      responses:
        "200":
          application/json: {"document_id": "<id>", "summary": "<value>"}
        "401":
          application/json: {"detail": "<value>"}
        "422": {}
  Retrieve:
    speakeasy-default-retrieve:
      requestBody:
        application/json: {"query": "What is the best pizza place in SF?", "top_k": 8, "filter": {"department": {"$in": ["sales", "marketing"]}}, "rerank": true, "max_chunks_per_document": 0, "partition": "<value>"}
      responses:
        "200":
          application/json: {"scored_chunks": [{"text": "<value>", "score": "9198.30", "document_id": "<id>", "document_name": "<value>", "document_metadata": {"key": "<value>"}}]}
        "401":
          application/json: {"detail": "<value>"}
        "422": {}
  ListInstructions:
    speakeasy-default-list-instructions:
      responses:
        "200":
          application/json: [{"id": "07948203-9687-472b-addd-d152fe0e4b0c", "created_at": "2023-07-16T13:45:54.250Z", "updated_at": "2023-06-27T05:32:29.020Z", "name": "Find all pizzas", "active": true, "scope": "document", "prompt": "Find all pizzas described in the text.", "entity_schema": {"additionalProperties": false, "properties": {"size": {"enum": ["small", "medium", "large"], "type": "string"}, "crust": {"enum": ["thin", "thick", "stuffed"], "type": "string"}, "sauce": {"enum": ["tomato", "alfredo", "pesto"], "type": "string"}, "cheese": {"enum": ["mozzarella", "cheddar", "parmesan", "vegan"], "type": "string"}, "toppings": {"items": {"enum": ["pepperoni", "mushrooms", "onions", "sausage", "bacon", "extra cheese", "black olives", "green peppers", "pineapple", "spinach"], "type": "string"}, "type": "array", "uniqueItems": true}, "extraInstructions": {"type": "string"}}, "required": ["size", "crust", "sauce", "cheese"], "title": "Pizza", "type": "object"}, "partition": "<value>"}]
        "401":
          application/json: {"detail": "<value>"}
  CreateInstruction:
    speakeasy-default-create-instruction:
      requestBody:
        application/json: {"name": "Find all pizzas", "active": true, "scope": "chunk", "prompt": "Find all pizzas described in the text.", "entity_schema": {"additionalProperties": false, "properties": {"size": {"enum": ["small", "medium", "large"], "type": "string"}, "crust": {"enum": ["thin", "thick", "stuffed"], "type": "string"}, "sauce": {"enum": ["tomato", "alfredo", "pesto"], "type": "string"}, "cheese": {"enum": ["mozzarella", "cheddar", "parmesan", "vegan"], "type": "string"}, "toppings": {"items": {"enum": ["pepperoni", "mushrooms", "onions", "sausage", "bacon", "extra cheese", "black olives", "green peppers", "pineapple", "spinach"], "type": "string"}, "type": "array", "uniqueItems": true}, "extraInstructions": {"type": "string"}}, "required": ["size", "crust", "sauce", "cheese"], "title": "Pizza", "type": "object"}, "partition": "<value>"}
      responses:
        "200":
          application/json: {"id": "7a4c4504-3a1d-446a-b2d3-54e705734d3b", "created_at": "2024-07-30T12:44:16.443Z", "updated_at": "2023-09-24T03:06:52.578Z", "name": "Find all pizzas", "active": true, "scope": "document", "prompt": "Find all pizzas described in the text.", "entity_schema": {"additionalProperties": false, "properties": {"size": {"enum": ["small", "medium", "large"], "type": "string"}, "crust": {"enum": ["thin", "thick", "stuffed"], "type": "string"}, "sauce": {"enum": ["tomato", "alfredo", "pesto"], "type": "string"}, "cheese": {"enum": ["mozzarella", "cheddar", "parmesan", "vegan"], "type": "string"}, "toppings": {"items": {"enum": ["pepperoni", "mushrooms", "onions", "sausage", "bacon", "extra cheese", "black olives", "green peppers", "pineapple", "spinach"], "type": "string"}, "type": "array", "uniqueItems": true}, "extraInstructions": {"type": "string"}}, "required": ["size", "crust", "sauce", "cheese"], "title": "Pizza", "type": "object"}, "partition": "<value>"}
        "401":
          application/json: {"detail": "<value>"}
        "422": {}
  UpdateInstruction:
    speakeasy-default-update-instruction:
      parameters:
        path:
          instruction_id: "<INSTRUCTION_ID>"
      requestBody:
        application/json: {"active": true}
      responses:
        "200":
          application/json: {"id": "300da585-97bb-4310-a83d-8181b96e85ab", "created_at": "2023-01-22T23:04:46.512Z", "updated_at": "2023-05-30T20:38:04.429Z", "name": "Find all pizzas", "active": true, "scope": "document", "prompt": "Find all pizzas described in the text.", "entity_schema": {"additionalProperties": false, "properties": {"size": {"enum": ["small", "medium", "large"], "type": "string"}, "crust": {"enum": ["thin", "thick", "stuffed"], "type": "string"}, "sauce": {"enum": ["tomato", "alfredo", "pesto"], "type": "string"}, "cheese": {"enum": ["mozzarella", "cheddar", "parmesan", "vegan"], "type": "string"}, "toppings": {"items": {"enum": ["pepperoni", "mushrooms", "onions", "sausage", "bacon", "extra cheese", "black olives", "green peppers", "pineapple", "spinach"], "type": "string"}, "type": "array", "uniqueItems": true}, "extraInstructions": {"type": "string"}}, "required": ["size", "crust", "sauce", "cheese"], "title": "Pizza", "type": "object"}, "partition": "<value>"}
        "401":
          application/json: {"detail": "<value>"}
        "422": {}
  ListEntitiesByInstruction:
    speakeasy-default-list-entities-by-instruction:
      parameters:
        path:
          instruction_id: "<INSTRUCTION_ID>"
        query: {}
      responses:
        "200":
          application/json: {"entities": []}
        "401":
          application/json: {"detail": "<value>"}
        "422": {}
  ListEntitiesByDocument:
    speakeasy-default-list-entities-by-document:
      parameters:
        path:
          document_id: "<DOCUMENT_ID>"
        query: {}
      responses:
        "200":
          application/json: {"entities": [{"id": "0acf0abf-c6b5-4e2a-9ea8-a13f725d0bb4", "created_at": "2024-05-24T20:59:27.681Z", "updated_at": "2022-12-13T21:49:21.883Z", "instruction_id": "92a05549-1b0f-45fb-8f85-0f20075f1108", "document_id": "104fc7ec-2190-4ecf-83d0-7049ae9e1af9", "data": {"key": "<value>", "key1": "<value>"}}]}
        "401":
          application/json: {"detail": "<value>"}
        "422": {}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { connectionsDelete } from "../../funcs/connectionsDelete.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request:
    operations
      .DeleteConnectionConnectionsConnectionIdDeletePostRequest$inboundSchema,
};

export const tool$connectionsDelete: ToolDefinition<typeof args> = {
  name: "connections-delete",
  description: `Delete Connection

Schedules a connection to be deleted. You can choose to keep the files from the connection or delete them all. If you keep the files, they will no longer be associated to the connection. Deleting can take some time, so you will still see files for a bit after this is called.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await connectionsDelete(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};

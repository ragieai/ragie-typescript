/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Partition strategy for the document. Options are `'hi_res'` or `'fast'`. When set to `'hi_res'`, images and tables will be extracted from the document. `'fast'` will only extract text. `'fast'` may be up to 20x faster than `'hi_res'`. `hi_res` is only applicable for Word documents, PDFs, Images, and PowerPoints. Images will always be processed in `hi_res`. If `hi_res` is set for an unsupported document type, it will be processed and billed in `fast` mode.
 */
export const UpdateDocumentFromUrlParamsMode = {
  HiRes: "hi_res",
  Fast: "fast",
} as const;
/**
 * Partition strategy for the document. Options are `'hi_res'` or `'fast'`. When set to `'hi_res'`, images and tables will be extracted from the document. `'fast'` will only extract text. `'fast'` may be up to 20x faster than `'hi_res'`. `hi_res` is only applicable for Word documents, PDFs, Images, and PowerPoints. Images will always be processed in `hi_res`. If `hi_res` is set for an unsupported document type, it will be processed and billed in `fast` mode.
 */
export type UpdateDocumentFromUrlParamsMode = ClosedEnum<
  typeof UpdateDocumentFromUrlParamsMode
>;

export type UpdateDocumentFromUrlParams = {
  /**
   * Partition strategy for the document. Options are `'hi_res'` or `'fast'`. When set to `'hi_res'`, images and tables will be extracted from the document. `'fast'` will only extract text. `'fast'` may be up to 20x faster than `'hi_res'`. `hi_res` is only applicable for Word documents, PDFs, Images, and PowerPoints. Images will always be processed in `hi_res`. If `hi_res` is set for an unsupported document type, it will be processed and billed in `fast` mode.
   */
  mode?: UpdateDocumentFromUrlParamsMode | undefined;
  /**
   * Url of the file to download. Must be publicly accessible and HTTP or HTTPS scheme.
   */
  url: string;
};

/** @internal */
export const UpdateDocumentFromUrlParamsMode$inboundSchema: z.ZodNativeEnum<
  typeof UpdateDocumentFromUrlParamsMode
> = z.nativeEnum(UpdateDocumentFromUrlParamsMode);

/** @internal */
export const UpdateDocumentFromUrlParamsMode$outboundSchema: z.ZodNativeEnum<
  typeof UpdateDocumentFromUrlParamsMode
> = UpdateDocumentFromUrlParamsMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateDocumentFromUrlParamsMode$ {
  /** @deprecated use `UpdateDocumentFromUrlParamsMode$inboundSchema` instead. */
  export const inboundSchema = UpdateDocumentFromUrlParamsMode$inboundSchema;
  /** @deprecated use `UpdateDocumentFromUrlParamsMode$outboundSchema` instead. */
  export const outboundSchema = UpdateDocumentFromUrlParamsMode$outboundSchema;
}

/** @internal */
export const UpdateDocumentFromUrlParams$inboundSchema: z.ZodType<
  UpdateDocumentFromUrlParams,
  z.ZodTypeDef,
  unknown
> = z.object({
  mode: UpdateDocumentFromUrlParamsMode$inboundSchema.default("fast"),
  url: z.string(),
});

/** @internal */
export type UpdateDocumentFromUrlParams$Outbound = {
  mode: string;
  url: string;
};

/** @internal */
export const UpdateDocumentFromUrlParams$outboundSchema: z.ZodType<
  UpdateDocumentFromUrlParams$Outbound,
  z.ZodTypeDef,
  UpdateDocumentFromUrlParams
> = z.object({
  mode: UpdateDocumentFromUrlParamsMode$outboundSchema.default("fast"),
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateDocumentFromUrlParams$ {
  /** @deprecated use `UpdateDocumentFromUrlParams$inboundSchema` instead. */
  export const inboundSchema = UpdateDocumentFromUrlParams$inboundSchema;
  /** @deprecated use `UpdateDocumentFromUrlParams$outboundSchema` instead. */
  export const outboundSchema = UpdateDocumentFromUrlParams$outboundSchema;
  /** @deprecated use `UpdateDocumentFromUrlParams$Outbound` instead. */
  export type Outbound = UpdateDocumentFromUrlParams$Outbound;
}

export function updateDocumentFromUrlParamsToJSON(
  updateDocumentFromUrlParams: UpdateDocumentFromUrlParams,
): string {
  return JSON.stringify(
    UpdateDocumentFromUrlParams$outboundSchema.parse(
      updateDocumentFromUrlParams,
    ),
  );
}

export function updateDocumentFromUrlParamsFromJSON(
  jsonString: string,
): SafeParseResult<UpdateDocumentFromUrlParams, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateDocumentFromUrlParams$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateDocumentFromUrlParams' from JSON`,
  );
}

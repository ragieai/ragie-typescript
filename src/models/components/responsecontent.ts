/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ResponseContent = {
  type?: "text" | undefined;
  text: string;
  annotations?: Array<{ [k: string]: any }> | undefined;
};

/** @internal */
export const ResponseContent$inboundSchema: z.ZodType<
  ResponseContent,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal("text").default("text"),
  text: z.string(),
  annotations: z.array(z.record(z.any())).optional(),
});

/** @internal */
export type ResponseContent$Outbound = {
  type: "text";
  text: string;
  annotations?: Array<{ [k: string]: any }> | undefined;
};

/** @internal */
export const ResponseContent$outboundSchema: z.ZodType<
  ResponseContent$Outbound,
  z.ZodTypeDef,
  ResponseContent
> = z.object({
  type: z.literal("text").default("text" as const),
  text: z.string(),
  annotations: z.array(z.record(z.any())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseContent$ {
  /** @deprecated use `ResponseContent$inboundSchema` instead. */
  export const inboundSchema = ResponseContent$inboundSchema;
  /** @deprecated use `ResponseContent$outboundSchema` instead. */
  export const outboundSchema = ResponseContent$outboundSchema;
  /** @deprecated use `ResponseContent$Outbound` instead. */
  export type Outbound = ResponseContent$Outbound;
}

export function responseContentToJSON(
  responseContent: ResponseContent,
): string {
  return JSON.stringify(ResponseContent$outboundSchema.parse(responseContent));
}

export function responseContentFromJSON(
  jsonString: string,
): SafeParseResult<ResponseContent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseContent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseContent' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Entity, Entity$inboundSchema, Entity$Outbound, Entity$outboundSchema } from "./entity.js";
import {
    Pagination,
    Pagination$inboundSchema,
    Pagination$Outbound,
    Pagination$outboundSchema,
} from "./pagination.js";
import * as z from "zod";

export type EntityListResponse = {
    pagination: Pagination;
    entities: Array<Entity>;
};

/** @internal */
export const EntityListResponse$inboundSchema: z.ZodType<
    EntityListResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    pagination: Pagination$inboundSchema,
    entities: z.array(Entity$inboundSchema),
});

/** @internal */
export type EntityListResponse$Outbound = {
    pagination: Pagination$Outbound;
    entities: Array<Entity$Outbound>;
};

/** @internal */
export const EntityListResponse$outboundSchema: z.ZodType<
    EntityListResponse$Outbound,
    z.ZodTypeDef,
    EntityListResponse
> = z.object({
    pagination: Pagination$outboundSchema,
    entities: z.array(Entity$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntityListResponse$ {
    /** @deprecated use `EntityListResponse$inboundSchema` instead. */
    export const inboundSchema = EntityListResponse$inboundSchema;
    /** @deprecated use `EntityListResponse$outboundSchema` instead. */
    export const outboundSchema = EntityListResponse$outboundSchema;
    /** @deprecated use `EntityListResponse$Outbound` instead. */
    export type Outbound = EntityListResponse$Outbound;
}

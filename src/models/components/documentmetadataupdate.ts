/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type DocumentMetadataUpdateMetadata = string | number | boolean | Array<string>;

export type DocumentMetadataUpdate = {
    /**
     * The metadata to update on the document. Performs a partial update of the document's metadata. Keys must be strings. Values may be strings, numbers, booleans, or lists of strings. Numbers may be integers or floating point and will be converted to 64 bit floating point. Keys set to `null` are deleted. 1000 total values are allowed, inclusive of existing metadata. Each item in an array counts towards the total. The following keys are reserved for internal use: `document_id`, `document_type`, `document_source`, `document_name`, `document_uploaded_at`, `__ragie__document_version_id`, `__ragie__chunk_size_chars`, `__ragie__chunk_overlap_chars`.
     */
    metadata: { [k: string]: string | number | boolean | Array<string> };
};

/** @internal */
export const DocumentMetadataUpdateMetadata$inboundSchema: z.ZodType<
    DocumentMetadataUpdateMetadata,
    z.ZodTypeDef,
    unknown
> = z.union([z.string(), z.number().int(), z.boolean(), z.array(z.string())]);

/** @internal */
export type DocumentMetadataUpdateMetadata$Outbound = string | number | boolean | Array<string>;

/** @internal */
export const DocumentMetadataUpdateMetadata$outboundSchema: z.ZodType<
    DocumentMetadataUpdateMetadata$Outbound,
    z.ZodTypeDef,
    DocumentMetadataUpdateMetadata
> = z.union([z.string(), z.number().int(), z.boolean(), z.array(z.string())]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentMetadataUpdateMetadata$ {
    /** @deprecated use `DocumentMetadataUpdateMetadata$inboundSchema` instead. */
    export const inboundSchema = DocumentMetadataUpdateMetadata$inboundSchema;
    /** @deprecated use `DocumentMetadataUpdateMetadata$outboundSchema` instead. */
    export const outboundSchema = DocumentMetadataUpdateMetadata$outboundSchema;
    /** @deprecated use `DocumentMetadataUpdateMetadata$Outbound` instead. */
    export type Outbound = DocumentMetadataUpdateMetadata$Outbound;
}

/** @internal */
export const DocumentMetadataUpdate$inboundSchema: z.ZodType<
    DocumentMetadataUpdate,
    z.ZodTypeDef,
    unknown
> = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean(), z.array(z.string())])),
});

/** @internal */
export type DocumentMetadataUpdate$Outbound = {
    metadata: { [k: string]: string | number | boolean | Array<string> };
};

/** @internal */
export const DocumentMetadataUpdate$outboundSchema: z.ZodType<
    DocumentMetadataUpdate$Outbound,
    z.ZodTypeDef,
    DocumentMetadataUpdate
> = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean(), z.array(z.string())])),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentMetadataUpdate$ {
    /** @deprecated use `DocumentMetadataUpdate$inboundSchema` instead. */
    export const inboundSchema = DocumentMetadataUpdate$inboundSchema;
    /** @deprecated use `DocumentMetadataUpdate$outboundSchema` instead. */
    export const outboundSchema = DocumentMetadataUpdate$outboundSchema;
    /** @deprecated use `DocumentMetadataUpdate$Outbound` instead. */
    export type Outbound = DocumentMetadataUpdate$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type Pagination = {
    nextCursor?: string | null | undefined;
};

/** @internal */
export const Pagination$inboundSchema: z.ZodType<Pagination, z.ZodTypeDef, unknown> = z
    .object({
        next_cursor: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            next_cursor: "nextCursor",
        });
    });

/** @internal */
export type Pagination$Outbound = {
    next_cursor?: string | null | undefined;
};

/** @internal */
export const Pagination$outboundSchema: z.ZodType<Pagination$Outbound, z.ZodTypeDef, Pagination> = z
    .object({
        nextCursor: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            nextCursor: "next_cursor",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Pagination$ {
    /** @deprecated use `Pagination$inboundSchema` instead. */
    export const inboundSchema = Pagination$inboundSchema;
    /** @deprecated use `Pagination$outboundSchema` instead. */
    export const outboundSchema = Pagination$outboundSchema;
    /** @deprecated use `Pagination$Outbound` instead. */
    export type Outbound = Pagination$Outbound;
}

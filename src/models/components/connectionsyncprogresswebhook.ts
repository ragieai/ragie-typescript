/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ConnectionSyncProgressWebhookPayload,
  ConnectionSyncProgressWebhookPayload$inboundSchema,
  ConnectionSyncProgressWebhookPayload$Outbound,
  ConnectionSyncProgressWebhookPayload$outboundSchema,
} from "./connectionsyncprogresswebhookpayload.js";

export type ConnectionSyncProgressWebhook = {
  nonce: string;
  type?: "connection_sync_progress" | undefined;
  payload: ConnectionSyncProgressWebhookPayload;
};

/** @internal */
export const ConnectionSyncProgressWebhook$inboundSchema: z.ZodType<
  ConnectionSyncProgressWebhook,
  z.ZodTypeDef,
  unknown
> = z.object({
  nonce: z.string(),
  type: z.literal("connection_sync_progress").optional(),
  payload: ConnectionSyncProgressWebhookPayload$inboundSchema,
});

/** @internal */
export type ConnectionSyncProgressWebhook$Outbound = {
  nonce: string;
  type: "connection_sync_progress";
  payload: ConnectionSyncProgressWebhookPayload$Outbound;
};

/** @internal */
export const ConnectionSyncProgressWebhook$outboundSchema: z.ZodType<
  ConnectionSyncProgressWebhook$Outbound,
  z.ZodTypeDef,
  ConnectionSyncProgressWebhook
> = z.object({
  nonce: z.string(),
  type: z.literal("connection_sync_progress").default(
    "connection_sync_progress" as const,
  ),
  payload: ConnectionSyncProgressWebhookPayload$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConnectionSyncProgressWebhook$ {
  /** @deprecated use `ConnectionSyncProgressWebhook$inboundSchema` instead. */
  export const inboundSchema = ConnectionSyncProgressWebhook$inboundSchema;
  /** @deprecated use `ConnectionSyncProgressWebhook$outboundSchema` instead. */
  export const outboundSchema = ConnectionSyncProgressWebhook$outboundSchema;
  /** @deprecated use `ConnectionSyncProgressWebhook$Outbound` instead. */
  export type Outbound = ConnectionSyncProgressWebhook$Outbound;
}

export function connectionSyncProgressWebhookToJSON(
  connectionSyncProgressWebhook: ConnectionSyncProgressWebhook,
): string {
  return JSON.stringify(
    ConnectionSyncProgressWebhook$outboundSchema.parse(
      connectionSyncProgressWebhook,
    ),
  );
}

export function connectionSyncProgressWebhookFromJSON(
  jsonString: string,
): SafeParseResult<ConnectionSyncProgressWebhook, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ConnectionSyncProgressWebhook$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ConnectionSyncProgressWebhook' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  SharepointFileData,
  SharepointFileData$inboundSchema,
  SharepointFileData$Outbound,
  SharepointFileData$outboundSchema,
} from "./sharepointfiledata.js";
import {
  SharepointSiteData,
  SharepointSiteData$inboundSchema,
  SharepointSiteData$Outbound,
  SharepointSiteData$outboundSchema,
} from "./sharepointsitedata.js";

export type SharepointData = {
  site: SharepointSiteData;
  files: Array<SharepointFileData>;
};

/** @internal */
export const SharepointData$inboundSchema: z.ZodType<
  SharepointData,
  z.ZodTypeDef,
  unknown
> = z.object({
  site: SharepointSiteData$inboundSchema,
  files: z.array(SharepointFileData$inboundSchema),
});

/** @internal */
export type SharepointData$Outbound = {
  site: SharepointSiteData$Outbound;
  files: Array<SharepointFileData$Outbound>;
};

/** @internal */
export const SharepointData$outboundSchema: z.ZodType<
  SharepointData$Outbound,
  z.ZodTypeDef,
  SharepointData
> = z.object({
  site: SharepointSiteData$outboundSchema,
  files: z.array(SharepointFileData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SharepointData$ {
  /** @deprecated use `SharepointData$inboundSchema` instead. */
  export const inboundSchema = SharepointData$inboundSchema;
  /** @deprecated use `SharepointData$outboundSchema` instead. */
  export const outboundSchema = SharepointData$outboundSchema;
  /** @deprecated use `SharepointData$Outbound` instead. */
  export type Outbound = SharepointData$Outbound;
}

export function sharepointDataToJSON(sharepointData: SharepointData): string {
  return JSON.stringify(SharepointData$outboundSchema.parse(sharepointData));
}

export function sharepointDataFromJSON(
  jsonString: string,
): SafeParseResult<SharepointData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SharepointData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SharepointData' from JSON`,
  );
}

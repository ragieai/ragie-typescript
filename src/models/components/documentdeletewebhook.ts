/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DocumentDeleteWebhookPayload,
  DocumentDeleteWebhookPayload$inboundSchema,
  DocumentDeleteWebhookPayload$Outbound,
  DocumentDeleteWebhookPayload$outboundSchema,
} from "./documentdeletewebhookpayload.js";

export const DocumentDeleteWebhookType = {
  DocumentDeleted: "document_deleted",
} as const;
export type DocumentDeleteWebhookType = ClosedEnum<
  typeof DocumentDeleteWebhookType
>;

export type DocumentDeleteWebhook = {
  nonce: string;
  type?: "document_deleted" | undefined;
  payload: DocumentDeleteWebhookPayload;
};

/** @internal */
export const DocumentDeleteWebhookType$inboundSchema: z.ZodNativeEnum<
  typeof DocumentDeleteWebhookType
> = z.nativeEnum(DocumentDeleteWebhookType);

/** @internal */
export const DocumentDeleteWebhookType$outboundSchema: z.ZodNativeEnum<
  typeof DocumentDeleteWebhookType
> = DocumentDeleteWebhookType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentDeleteWebhookType$ {
  /** @deprecated use `DocumentDeleteWebhookType$inboundSchema` instead. */
  export const inboundSchema = DocumentDeleteWebhookType$inboundSchema;
  /** @deprecated use `DocumentDeleteWebhookType$outboundSchema` instead. */
  export const outboundSchema = DocumentDeleteWebhookType$outboundSchema;
}

/** @internal */
export const DocumentDeleteWebhook$inboundSchema: z.ZodType<
  DocumentDeleteWebhook,
  z.ZodTypeDef,
  unknown
> = z.object({
  nonce: z.string(),
  type: z.literal("document_deleted").optional(),
  payload: DocumentDeleteWebhookPayload$inboundSchema,
});

/** @internal */
export type DocumentDeleteWebhook$Outbound = {
  nonce: string;
  type: "document_deleted";
  payload: DocumentDeleteWebhookPayload$Outbound;
};

/** @internal */
export const DocumentDeleteWebhook$outboundSchema: z.ZodType<
  DocumentDeleteWebhook$Outbound,
  z.ZodTypeDef,
  DocumentDeleteWebhook
> = z.object({
  nonce: z.string(),
  type: z.literal("document_deleted").default("document_deleted"),
  payload: DocumentDeleteWebhookPayload$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentDeleteWebhook$ {
  /** @deprecated use `DocumentDeleteWebhook$inboundSchema` instead. */
  export const inboundSchema = DocumentDeleteWebhook$inboundSchema;
  /** @deprecated use `DocumentDeleteWebhook$outboundSchema` instead. */
  export const outboundSchema = DocumentDeleteWebhook$outboundSchema;
  /** @deprecated use `DocumentDeleteWebhook$Outbound` instead. */
  export type Outbound = DocumentDeleteWebhook$Outbound;
}

export function documentDeleteWebhookToJSON(
  documentDeleteWebhook: DocumentDeleteWebhook,
): string {
  return JSON.stringify(
    DocumentDeleteWebhook$outboundSchema.parse(documentDeleteWebhook),
  );
}

export function documentDeleteWebhookFromJSON(
  jsonString: string,
): SafeParseResult<DocumentDeleteWebhook, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DocumentDeleteWebhook$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentDeleteWebhook' from JSON`,
  );
}

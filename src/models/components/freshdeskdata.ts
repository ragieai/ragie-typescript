/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type FreshdeskData = {
  tickets: boolean;
  articles: boolean;
};

/** @internal */
export const FreshdeskData$inboundSchema: z.ZodType<
  FreshdeskData,
  z.ZodTypeDef,
  unknown
> = z.object({
  tickets: z.boolean(),
  articles: z.boolean(),
});

/** @internal */
export type FreshdeskData$Outbound = {
  tickets: boolean;
  articles: boolean;
};

/** @internal */
export const FreshdeskData$outboundSchema: z.ZodType<
  FreshdeskData$Outbound,
  z.ZodTypeDef,
  FreshdeskData
> = z.object({
  tickets: z.boolean(),
  articles: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FreshdeskData$ {
  /** @deprecated use `FreshdeskData$inboundSchema` instead. */
  export const inboundSchema = FreshdeskData$inboundSchema;
  /** @deprecated use `FreshdeskData$outboundSchema` instead. */
  export const outboundSchema = FreshdeskData$outboundSchema;
  /** @deprecated use `FreshdeskData$Outbound` instead. */
  export type Outbound = FreshdeskData$Outbound;
}

export function freshdeskDataToJSON(freshdeskData: FreshdeskData): string {
  return JSON.stringify(FreshdeskData$outboundSchema.parse(freshdeskData));
}

export function freshdeskDataFromJSON(
  jsonString: string,
): SafeParseResult<FreshdeskData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FreshdeskData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FreshdeskData' from JSON`,
  );
}

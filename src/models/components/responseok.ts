/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ResponseOK = {
  message?: string | undefined;
};

/** @internal */
export const ResponseOK$inboundSchema: z.ZodType<
  ResponseOK,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().default("ok"),
});

/** @internal */
export type ResponseOK$Outbound = {
  message: string;
};

/** @internal */
export const ResponseOK$outboundSchema: z.ZodType<
  ResponseOK$Outbound,
  z.ZodTypeDef,
  ResponseOK
> = z.object({
  message: z.string().default("ok"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseOK$ {
  /** @deprecated use `ResponseOK$inboundSchema` instead. */
  export const inboundSchema = ResponseOK$inboundSchema;
  /** @deprecated use `ResponseOK$outboundSchema` instead. */
  export const outboundSchema = ResponseOK$outboundSchema;
  /** @deprecated use `ResponseOK$Outbound` instead. */
  export type Outbound = ResponseOK$Outbound;
}

export function responseOKToJSON(responseOK: ResponseOK): string {
  return JSON.stringify(ResponseOK$outboundSchema.parse(responseOK));
}

export function responseOKFromJSON(
  jsonString: string,
): SafeParseResult<ResponseOK, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseOK$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseOK' from JSON`,
  );
}

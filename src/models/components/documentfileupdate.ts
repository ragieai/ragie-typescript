/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DocumentFileUpdate = {
  status: string;
};

/** @internal */
export const DocumentFileUpdate$inboundSchema: z.ZodType<
  DocumentFileUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.string(),
});

/** @internal */
export type DocumentFileUpdate$Outbound = {
  status: string;
};

/** @internal */
export const DocumentFileUpdate$outboundSchema: z.ZodType<
  DocumentFileUpdate$Outbound,
  z.ZodTypeDef,
  DocumentFileUpdate
> = z.object({
  status: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentFileUpdate$ {
  /** @deprecated use `DocumentFileUpdate$inboundSchema` instead. */
  export const inboundSchema = DocumentFileUpdate$inboundSchema;
  /** @deprecated use `DocumentFileUpdate$outboundSchema` instead. */
  export const outboundSchema = DocumentFileUpdate$outboundSchema;
  /** @deprecated use `DocumentFileUpdate$Outbound` instead. */
  export type Outbound = DocumentFileUpdate$Outbound;
}

export function documentFileUpdateToJSON(
  documentFileUpdate: DocumentFileUpdate,
): string {
  return JSON.stringify(
    DocumentFileUpdate$outboundSchema.parse(documentFileUpdate),
  );
}

export function documentFileUpdateFromJSON(
  jsonString: string,
): SafeParseResult<DocumentFileUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DocumentFileUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentFileUpdate' from JSON`,
  );
}

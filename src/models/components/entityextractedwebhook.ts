/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  EntityExtractedWebhookPayload,
  EntityExtractedWebhookPayload$inboundSchema,
  EntityExtractedWebhookPayload$Outbound,
  EntityExtractedWebhookPayload$outboundSchema,
} from "./entityextractedwebhookpayload.js";

export const EntityExtractedWebhookType = {
  EntityExtracted: "entity_extracted",
} as const;
export type EntityExtractedWebhookType = ClosedEnum<
  typeof EntityExtractedWebhookType
>;

export type EntityExtractedWebhook = {
  nonce: string;
  type?: "entity_extracted" | undefined;
  payload: EntityExtractedWebhookPayload;
};

/** @internal */
export const EntityExtractedWebhookType$inboundSchema: z.ZodNativeEnum<
  typeof EntityExtractedWebhookType
> = z.nativeEnum(EntityExtractedWebhookType);

/** @internal */
export const EntityExtractedWebhookType$outboundSchema: z.ZodNativeEnum<
  typeof EntityExtractedWebhookType
> = EntityExtractedWebhookType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntityExtractedWebhookType$ {
  /** @deprecated use `EntityExtractedWebhookType$inboundSchema` instead. */
  export const inboundSchema = EntityExtractedWebhookType$inboundSchema;
  /** @deprecated use `EntityExtractedWebhookType$outboundSchema` instead. */
  export const outboundSchema = EntityExtractedWebhookType$outboundSchema;
}

/** @internal */
export const EntityExtractedWebhook$inboundSchema: z.ZodType<
  EntityExtractedWebhook,
  z.ZodTypeDef,
  unknown
> = z.object({
  nonce: z.string(),
  type: z.literal("entity_extracted").optional(),
  payload: EntityExtractedWebhookPayload$inboundSchema,
});

/** @internal */
export type EntityExtractedWebhook$Outbound = {
  nonce: string;
  type: "entity_extracted";
  payload: EntityExtractedWebhookPayload$Outbound;
};

/** @internal */
export const EntityExtractedWebhook$outboundSchema: z.ZodType<
  EntityExtractedWebhook$Outbound,
  z.ZodTypeDef,
  EntityExtractedWebhook
> = z.object({
  nonce: z.string(),
  type: z.literal("entity_extracted").default("entity_extracted"),
  payload: EntityExtractedWebhookPayload$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntityExtractedWebhook$ {
  /** @deprecated use `EntityExtractedWebhook$inboundSchema` instead. */
  export const inboundSchema = EntityExtractedWebhook$inboundSchema;
  /** @deprecated use `EntityExtractedWebhook$outboundSchema` instead. */
  export const outboundSchema = EntityExtractedWebhook$outboundSchema;
  /** @deprecated use `EntityExtractedWebhook$Outbound` instead. */
  export type Outbound = EntityExtractedWebhook$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GoogleFolderData = {
  id: string;
  name: string;
  mimeType: string;
};

/** @internal */
export const GoogleFolderData$inboundSchema: z.ZodType<
  GoogleFolderData,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string(),
  mime_type: z.string(),
}).transform((v) => {
  return remap$(v, {
    "mime_type": "mimeType",
  });
});

/** @internal */
export type GoogleFolderData$Outbound = {
  id: string;
  name: string;
  mime_type: string;
};

/** @internal */
export const GoogleFolderData$outboundSchema: z.ZodType<
  GoogleFolderData$Outbound,
  z.ZodTypeDef,
  GoogleFolderData
> = z.object({
  id: z.string(),
  name: z.string(),
  mimeType: z.string(),
}).transform((v) => {
  return remap$(v, {
    mimeType: "mime_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GoogleFolderData$ {
  /** @deprecated use `GoogleFolderData$inboundSchema` instead. */
  export const inboundSchema = GoogleFolderData$inboundSchema;
  /** @deprecated use `GoogleFolderData$outboundSchema` instead. */
  export const outboundSchema = GoogleFolderData$outboundSchema;
  /** @deprecated use `GoogleFolderData$Outbound` instead. */
  export type Outbound = GoogleFolderData$Outbound;
}

export function googleFolderDataToJSON(
  googleFolderData: GoogleFolderData,
): string {
  return JSON.stringify(
    GoogleFolderData$outboundSchema.parse(googleFolderData),
  );
}

export function googleFolderDataFromJSON(
  jsonString: string,
): SafeParseResult<GoogleFolderData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GoogleFolderData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GoogleFolderData' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as b64$ from "../../lib/base64.js";
import { blobLikeSchema } from "../../types/blobs.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * Partition strategy for the document. Options are `'hi_res'` or `'fast'`. Only applicable for rich documents such as word documents and PDFs. When set to `'hi_res'`, images and tables will be extracted from the document. `'fast'` will only extract text. `'fast'` may be up to 20x faster than `'hi_res'`.
 */
export const BodyUpdateDocumentFileMode = {
    HiRes: "hi_res",
    Fast: "fast",
} as const;
/**
 * Partition strategy for the document. Options are `'hi_res'` or `'fast'`. Only applicable for rich documents such as word documents and PDFs. When set to `'hi_res'`, images and tables will be extracted from the document. `'fast'` will only extract text. `'fast'` may be up to 20x faster than `'hi_res'`.
 */
export type BodyUpdateDocumentFileMode = ClosedEnum<typeof BodyUpdateDocumentFileMode>;

export type BodyUpdateDocumentFileFile = {
    fileName: string;
    content: Uint8Array | string;
};

export type BodyUpdateDocumentFile = {
    /**
     * The binary file to upload, extract, and index for retrieval. The following file types are supported: Plain Text: `.eml` `.html` `.json` `.md` `.msg` `.rst` `.rtf` `.txt` `.xml`
     *
     * @remarks
     * Images: `.png` `.webp` `.jpg` `.jpeg` `.tiff` `.bmp` `.heic`
     * Documents: `.csv` `.doc` `.docx` `.epub` `.odt` `.pdf` `.ppt` `.pptx` `.tsv` `.xlsx`.
     */
    file: BodyUpdateDocumentFileFile | Blob;
    /**
     * Partition strategy for the document. Options are `'hi_res'` or `'fast'`. Only applicable for rich documents such as word documents and PDFs. When set to `'hi_res'`, images and tables will be extracted from the document. `'fast'` will only extract text. `'fast'` may be up to 20x faster than `'hi_res'`.
     */
    mode?: BodyUpdateDocumentFileMode | undefined;
};

/** @internal */
export const BodyUpdateDocumentFileMode$inboundSchema: z.ZodNativeEnum<
    typeof BodyUpdateDocumentFileMode
> = z.nativeEnum(BodyUpdateDocumentFileMode);

/** @internal */
export const BodyUpdateDocumentFileMode$outboundSchema: z.ZodNativeEnum<
    typeof BodyUpdateDocumentFileMode
> = BodyUpdateDocumentFileMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BodyUpdateDocumentFileMode$ {
    /** @deprecated use `BodyUpdateDocumentFileMode$inboundSchema` instead. */
    export const inboundSchema = BodyUpdateDocumentFileMode$inboundSchema;
    /** @deprecated use `BodyUpdateDocumentFileMode$outboundSchema` instead. */
    export const outboundSchema = BodyUpdateDocumentFileMode$outboundSchema;
}

/** @internal */
export const BodyUpdateDocumentFileFile$inboundSchema: z.ZodType<
    BodyUpdateDocumentFileFile,
    z.ZodTypeDef,
    unknown
> = z.object({
    fileName: z.string(),
    content: b64$.zodInbound,
});

/** @internal */
export type BodyUpdateDocumentFileFile$Outbound = {
    fileName: string;
    content: Uint8Array;
};

/** @internal */
export const BodyUpdateDocumentFileFile$outboundSchema: z.ZodType<
    BodyUpdateDocumentFileFile$Outbound,
    z.ZodTypeDef,
    BodyUpdateDocumentFileFile
> = z.object({
    fileName: z.string(),
    content: b64$.zodOutbound,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BodyUpdateDocumentFileFile$ {
    /** @deprecated use `BodyUpdateDocumentFileFile$inboundSchema` instead. */
    export const inboundSchema = BodyUpdateDocumentFileFile$inboundSchema;
    /** @deprecated use `BodyUpdateDocumentFileFile$outboundSchema` instead. */
    export const outboundSchema = BodyUpdateDocumentFileFile$outboundSchema;
    /** @deprecated use `BodyUpdateDocumentFileFile$Outbound` instead. */
    export type Outbound = BodyUpdateDocumentFileFile$Outbound;
}

/** @internal */
export const BodyUpdateDocumentFile$inboundSchema: z.ZodType<
    BodyUpdateDocumentFile,
    z.ZodTypeDef,
    unknown
> = z.object({
    file: z.lazy(() => BodyUpdateDocumentFileFile$inboundSchema),
    mode: BodyUpdateDocumentFileMode$inboundSchema.default("fast"),
});

/** @internal */
export type BodyUpdateDocumentFile$Outbound = {
    file: BodyUpdateDocumentFileFile$Outbound | Blob;
    mode: string;
};

/** @internal */
export const BodyUpdateDocumentFile$outboundSchema: z.ZodType<
    BodyUpdateDocumentFile$Outbound,
    z.ZodTypeDef,
    BodyUpdateDocumentFile
> = z.object({
    file: z.lazy(() => BodyUpdateDocumentFileFile$outboundSchema).or(blobLikeSchema),
    mode: BodyUpdateDocumentFileMode$outboundSchema.default("fast"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BodyUpdateDocumentFile$ {
    /** @deprecated use `BodyUpdateDocumentFile$inboundSchema` instead. */
    export const inboundSchema = BodyUpdateDocumentFile$inboundSchema;
    /** @deprecated use `BodyUpdateDocumentFile$outboundSchema` instead. */
    export const outboundSchema = BodyUpdateDocumentFile$outboundSchema;
    /** @deprecated use `BodyUpdateDocumentFile$Outbound` instead. */
    export type Outbound = BodyUpdateDocumentFile$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DocumentDeleteWebhookPayload = {
  documentId: string;
  partition: string;
  metadata: { [k: string]: any };
  externalId: string | null;
  name: string;
  connectionId: string | null;
  syncId: string | null;
};

/** @internal */
export const DocumentDeleteWebhookPayload$inboundSchema: z.ZodType<
  DocumentDeleteWebhookPayload,
  z.ZodTypeDef,
  unknown
> = z.object({
  document_id: z.string(),
  partition: z.string(),
  metadata: z.record(z.any()),
  external_id: z.nullable(z.string()),
  name: z.string(),
  connection_id: z.nullable(z.string()),
  sync_id: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    "document_id": "documentId",
    "external_id": "externalId",
    "connection_id": "connectionId",
    "sync_id": "syncId",
  });
});

/** @internal */
export type DocumentDeleteWebhookPayload$Outbound = {
  document_id: string;
  partition: string;
  metadata: { [k: string]: any };
  external_id: string | null;
  name: string;
  connection_id: string | null;
  sync_id: string | null;
};

/** @internal */
export const DocumentDeleteWebhookPayload$outboundSchema: z.ZodType<
  DocumentDeleteWebhookPayload$Outbound,
  z.ZodTypeDef,
  DocumentDeleteWebhookPayload
> = z.object({
  documentId: z.string(),
  partition: z.string(),
  metadata: z.record(z.any()),
  externalId: z.nullable(z.string()),
  name: z.string(),
  connectionId: z.nullable(z.string()),
  syncId: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    documentId: "document_id",
    externalId: "external_id",
    connectionId: "connection_id",
    syncId: "sync_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentDeleteWebhookPayload$ {
  /** @deprecated use `DocumentDeleteWebhookPayload$inboundSchema` instead. */
  export const inboundSchema = DocumentDeleteWebhookPayload$inboundSchema;
  /** @deprecated use `DocumentDeleteWebhookPayload$outboundSchema` instead. */
  export const outboundSchema = DocumentDeleteWebhookPayload$outboundSchema;
  /** @deprecated use `DocumentDeleteWebhookPayload$Outbound` instead. */
  export type Outbound = DocumentDeleteWebhookPayload$Outbound;
}

export function documentDeleteWebhookPayloadToJSON(
  documentDeleteWebhookPayload: DocumentDeleteWebhookPayload,
): string {
  return JSON.stringify(
    DocumentDeleteWebhookPayload$outboundSchema.parse(
      documentDeleteWebhookPayload,
    ),
  );
}

export function documentDeleteWebhookPayloadFromJSON(
  jsonString: string,
): SafeParseResult<DocumentDeleteWebhookPayload, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DocumentDeleteWebhookPayload$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DocumentDeleteWebhookPayload' from JSON`,
  );
}

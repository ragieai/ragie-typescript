/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ConnectionSyncStartedWebhookPayload,
  ConnectionSyncStartedWebhookPayload$inboundSchema,
  ConnectionSyncStartedWebhookPayload$Outbound,
  ConnectionSyncStartedWebhookPayload$outboundSchema,
} from "./connectionsyncstartedwebhookpayload.js";

export type ConnectionSyncStartedWebhook = {
  nonce: string;
  type?: "connection_sync_started" | undefined;
  payload: ConnectionSyncStartedWebhookPayload;
};

/** @internal */
export const ConnectionSyncStartedWebhook$inboundSchema: z.ZodType<
  ConnectionSyncStartedWebhook,
  z.ZodTypeDef,
  unknown
> = z.object({
  nonce: z.string(),
  type: z.literal("connection_sync_started").optional(),
  payload: ConnectionSyncStartedWebhookPayload$inboundSchema,
});

/** @internal */
export type ConnectionSyncStartedWebhook$Outbound = {
  nonce: string;
  type: "connection_sync_started";
  payload: ConnectionSyncStartedWebhookPayload$Outbound;
};

/** @internal */
export const ConnectionSyncStartedWebhook$outboundSchema: z.ZodType<
  ConnectionSyncStartedWebhook$Outbound,
  z.ZodTypeDef,
  ConnectionSyncStartedWebhook
> = z.object({
  nonce: z.string(),
  type: z.literal("connection_sync_started").default(
    "connection_sync_started" as const,
  ),
  payload: ConnectionSyncStartedWebhookPayload$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConnectionSyncStartedWebhook$ {
  /** @deprecated use `ConnectionSyncStartedWebhook$inboundSchema` instead. */
  export const inboundSchema = ConnectionSyncStartedWebhook$inboundSchema;
  /** @deprecated use `ConnectionSyncStartedWebhook$outboundSchema` instead. */
  export const outboundSchema = ConnectionSyncStartedWebhook$outboundSchema;
  /** @deprecated use `ConnectionSyncStartedWebhook$Outbound` instead. */
  export type Outbound = ConnectionSyncStartedWebhook$Outbound;
}

export function connectionSyncStartedWebhookToJSON(
  connectionSyncStartedWebhook: ConnectionSyncStartedWebhook,
): string {
  return JSON.stringify(
    ConnectionSyncStartedWebhook$outboundSchema.parse(
      connectionSyncStartedWebhook,
    ),
  );
}

export function connectionSyncStartedWebhookFromJSON(
  jsonString: string,
): SafeParseResult<ConnectionSyncStartedWebhook, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ConnectionSyncStartedWebhook$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ConnectionSyncStartedWebhook' from JSON`,
  );
}

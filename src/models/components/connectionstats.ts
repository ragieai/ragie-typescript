/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ConnectionStats = {
  documentCount: number;
};

/** @internal */
export const ConnectionStats$inboundSchema: z.ZodType<
  ConnectionStats,
  z.ZodTypeDef,
  unknown
> = z.object({
  document_count: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "document_count": "documentCount",
  });
});

/** @internal */
export type ConnectionStats$Outbound = {
  document_count: number;
};

/** @internal */
export const ConnectionStats$outboundSchema: z.ZodType<
  ConnectionStats$Outbound,
  z.ZodTypeDef,
  ConnectionStats
> = z.object({
  documentCount: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    documentCount: "document_count",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConnectionStats$ {
  /** @deprecated use `ConnectionStats$inboundSchema` instead. */
  export const inboundSchema = ConnectionStats$inboundSchema;
  /** @deprecated use `ConnectionStats$outboundSchema` instead. */
  export const outboundSchema = ConnectionStats$outboundSchema;
  /** @deprecated use `ConnectionStats$Outbound` instead. */
  export type Outbound = ConnectionStats$Outbound;
}

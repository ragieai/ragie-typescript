/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ZendeskData = {
  articles: boolean;
};

/** @internal */
export const ZendeskData$inboundSchema: z.ZodType<
  ZendeskData,
  z.ZodTypeDef,
  unknown
> = z.object({
  articles: z.boolean(),
});

/** @internal */
export type ZendeskData$Outbound = {
  articles: boolean;
};

/** @internal */
export const ZendeskData$outboundSchema: z.ZodType<
  ZendeskData$Outbound,
  z.ZodTypeDef,
  ZendeskData
> = z.object({
  articles: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ZendeskData$ {
  /** @deprecated use `ZendeskData$inboundSchema` instead. */
  export const inboundSchema = ZendeskData$inboundSchema;
  /** @deprecated use `ZendeskData$outboundSchema` instead. */
  export const outboundSchema = ZendeskData$outboundSchema;
  /** @deprecated use `ZendeskData$Outbound` instead. */
  export type Outbound = ZendeskData$Outbound;
}

export function zendeskDataToJSON(zendeskData: ZendeskData): string {
  return JSON.stringify(ZendeskData$outboundSchema.parse(zendeskData));
}

export function zendeskDataFromJSON(
  jsonString: string,
): SafeParseResult<ZendeskData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ZendeskData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ZendeskData' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type DocumentSummaryResponse = {
    documentId: string;
    summary: string;
};

/** @internal */
export const DocumentSummaryResponse$inboundSchema: z.ZodType<
    DocumentSummaryResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        document_id: z.string(),
        summary: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            document_id: "documentId",
        });
    });

/** @internal */
export type DocumentSummaryResponse$Outbound = {
    document_id: string;
    summary: string;
};

/** @internal */
export const DocumentSummaryResponse$outboundSchema: z.ZodType<
    DocumentSummaryResponse$Outbound,
    z.ZodTypeDef,
    DocumentSummaryResponse
> = z
    .object({
        documentId: z.string(),
        summary: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            documentId: "document_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentSummaryResponse$ {
    /** @deprecated use `DocumentSummaryResponse$inboundSchema` instead. */
    export const inboundSchema = DocumentSummaryResponse$inboundSchema;
    /** @deprecated use `DocumentSummaryResponse$outboundSchema` instead. */
    export const outboundSchema = DocumentSummaryResponse$outboundSchema;
    /** @deprecated use `DocumentSummaryResponse$Outbound` instead. */
    export type Outbound = DocumentSummaryResponse$Outbound;
}

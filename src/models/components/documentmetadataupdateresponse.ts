/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type DocumentMetadataUpdateResponseMetadata = string | number | boolean | Array<string>;

export type DocumentMetadataUpdateResponse = {
    /**
     * The full document metadata inclusive of the update.
     */
    metadata: { [k: string]: string | number | boolean | Array<string> };
};

/** @internal */
export const DocumentMetadataUpdateResponseMetadata$inboundSchema: z.ZodType<
    DocumentMetadataUpdateResponseMetadata,
    z.ZodTypeDef,
    unknown
> = z.union([z.string(), z.number().int(), z.boolean(), z.array(z.string())]);

/** @internal */
export type DocumentMetadataUpdateResponseMetadata$Outbound =
    | string
    | number
    | boolean
    | Array<string>;

/** @internal */
export const DocumentMetadataUpdateResponseMetadata$outboundSchema: z.ZodType<
    DocumentMetadataUpdateResponseMetadata$Outbound,
    z.ZodTypeDef,
    DocumentMetadataUpdateResponseMetadata
> = z.union([z.string(), z.number().int(), z.boolean(), z.array(z.string())]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentMetadataUpdateResponseMetadata$ {
    /** @deprecated use `DocumentMetadataUpdateResponseMetadata$inboundSchema` instead. */
    export const inboundSchema = DocumentMetadataUpdateResponseMetadata$inboundSchema;
    /** @deprecated use `DocumentMetadataUpdateResponseMetadata$outboundSchema` instead. */
    export const outboundSchema = DocumentMetadataUpdateResponseMetadata$outboundSchema;
    /** @deprecated use `DocumentMetadataUpdateResponseMetadata$Outbound` instead. */
    export type Outbound = DocumentMetadataUpdateResponseMetadata$Outbound;
}

/** @internal */
export const DocumentMetadataUpdateResponse$inboundSchema: z.ZodType<
    DocumentMetadataUpdateResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean(), z.array(z.string())])),
});

/** @internal */
export type DocumentMetadataUpdateResponse$Outbound = {
    metadata: { [k: string]: string | number | boolean | Array<string> };
};

/** @internal */
export const DocumentMetadataUpdateResponse$outboundSchema: z.ZodType<
    DocumentMetadataUpdateResponse$Outbound,
    z.ZodTypeDef,
    DocumentMetadataUpdateResponse
> = z.object({
    metadata: z.record(z.union([z.string(), z.number().int(), z.boolean(), z.array(z.string())])),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentMetadataUpdateResponse$ {
    /** @deprecated use `DocumentMetadataUpdateResponse$inboundSchema` instead. */
    export const inboundSchema = DocumentMetadataUpdateResponse$inboundSchema;
    /** @deprecated use `DocumentMetadataUpdateResponse$outboundSchema` instead. */
    export const outboundSchema = DocumentMetadataUpdateResponse$outboundSchema;
    /** @deprecated use `DocumentMetadataUpdateResponse$Outbound` instead. */
    export type Outbound = DocumentMetadataUpdateResponse$Outbound;
}

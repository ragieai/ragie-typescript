/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const Type = {
  File: "file",
  Folder: "folder",
} as const;
export type Type = ClosedEnum<typeof Type>;

export type SharepointFileData = {
  id: string;
  name: string;
  type: Type;
};

/** @internal */
export const Type$inboundSchema: z.ZodNativeEnum<typeof Type> = z.nativeEnum(
  Type,
);

/** @internal */
export const Type$outboundSchema: z.ZodNativeEnum<typeof Type> =
  Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Type$ {
  /** @deprecated use `Type$inboundSchema` instead. */
  export const inboundSchema = Type$inboundSchema;
  /** @deprecated use `Type$outboundSchema` instead. */
  export const outboundSchema = Type$outboundSchema;
}

/** @internal */
export const SharepointFileData$inboundSchema: z.ZodType<
  SharepointFileData,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string(),
  type: Type$inboundSchema,
});

/** @internal */
export type SharepointFileData$Outbound = {
  id: string;
  name: string;
  type: string;
};

/** @internal */
export const SharepointFileData$outboundSchema: z.ZodType<
  SharepointFileData$Outbound,
  z.ZodTypeDef,
  SharepointFileData
> = z.object({
  id: z.string(),
  name: z.string(),
  type: Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SharepointFileData$ {
  /** @deprecated use `SharepointFileData$inboundSchema` instead. */
  export const inboundSchema = SharepointFileData$inboundSchema;
  /** @deprecated use `SharepointFileData$outboundSchema` instead. */
  export const outboundSchema = SharepointFileData$outboundSchema;
  /** @deprecated use `SharepointFileData$Outbound` instead. */
  export type Outbound = SharepointFileData$Outbound;
}

export function sharepointFileDataToJSON(
  sharepointFileData: SharepointFileData,
): string {
  return JSON.stringify(
    SharepointFileData$outboundSchema.parse(sharepointFileData),
  );
}

export function sharepointFileDataFromJSON(
  jsonString: string,
): SafeParseResult<SharepointFileData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SharepointFileData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SharepointFileData' from JSON`,
  );
}

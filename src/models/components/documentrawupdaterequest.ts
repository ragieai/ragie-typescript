/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type Data2 = {};

/**
 * Document data in a text or JSON format.
 */
export type DocumentRawUpdateRequestData = Data2 | string;

export type DocumentRawUpdateRequest = {
    /**
     * Document data in a text or JSON format.
     */
    data: Data2 | string;
};

/** @internal */
export const Data2$inboundSchema: z.ZodType<Data2, z.ZodTypeDef, unknown> = z.object({});

/** @internal */
export type Data2$Outbound = {};

/** @internal */
export const Data2$outboundSchema: z.ZodType<Data2$Outbound, z.ZodTypeDef, Data2> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Data2$ {
    /** @deprecated use `Data2$inboundSchema` instead. */
    export const inboundSchema = Data2$inboundSchema;
    /** @deprecated use `Data2$outboundSchema` instead. */
    export const outboundSchema = Data2$outboundSchema;
    /** @deprecated use `Data2$Outbound` instead. */
    export type Outbound = Data2$Outbound;
}

/** @internal */
export const DocumentRawUpdateRequestData$inboundSchema: z.ZodType<
    DocumentRawUpdateRequestData,
    z.ZodTypeDef,
    unknown
> = z.union([z.lazy(() => Data2$inboundSchema), z.string()]);

/** @internal */
export type DocumentRawUpdateRequestData$Outbound = Data2$Outbound | string;

/** @internal */
export const DocumentRawUpdateRequestData$outboundSchema: z.ZodType<
    DocumentRawUpdateRequestData$Outbound,
    z.ZodTypeDef,
    DocumentRawUpdateRequestData
> = z.union([z.lazy(() => Data2$outboundSchema), z.string()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentRawUpdateRequestData$ {
    /** @deprecated use `DocumentRawUpdateRequestData$inboundSchema` instead. */
    export const inboundSchema = DocumentRawUpdateRequestData$inboundSchema;
    /** @deprecated use `DocumentRawUpdateRequestData$outboundSchema` instead. */
    export const outboundSchema = DocumentRawUpdateRequestData$outboundSchema;
    /** @deprecated use `DocumentRawUpdateRequestData$Outbound` instead. */
    export type Outbound = DocumentRawUpdateRequestData$Outbound;
}

/** @internal */
export const DocumentRawUpdateRequest$inboundSchema: z.ZodType<
    DocumentRawUpdateRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: z.union([z.lazy(() => Data2$inboundSchema), z.string()]),
});

/** @internal */
export type DocumentRawUpdateRequest$Outbound = {
    data: Data2$Outbound | string;
};

/** @internal */
export const DocumentRawUpdateRequest$outboundSchema: z.ZodType<
    DocumentRawUpdateRequest$Outbound,
    z.ZodTypeDef,
    DocumentRawUpdateRequest
> = z.object({
    data: z.union([z.lazy(() => Data2$outboundSchema), z.string()]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DocumentRawUpdateRequest$ {
    /** @deprecated use `DocumentRawUpdateRequest$inboundSchema` instead. */
    export const inboundSchema = DocumentRawUpdateRequest$inboundSchema;
    /** @deprecated use `DocumentRawUpdateRequest$outboundSchema` instead. */
    export const outboundSchema = DocumentRawUpdateRequest$outboundSchema;
    /** @deprecated use `DocumentRawUpdateRequest$Outbound` instead. */
    export type Outbound = DocumentRawUpdateRequest$Outbound;
}

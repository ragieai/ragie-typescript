/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type ListDocumentsRequest = {
    /**
     * An opaque cursor for pagination
     */
    cursor?: string | null | undefined;
    /**
     * The number of items per page (must be greater than 0 and less than or equal to 100)
     */
    pageSize?: number | undefined;
};

/** @internal */
export const ListDocumentsRequest$inboundSchema: z.ZodType<
    ListDocumentsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        cursor: z.nullable(z.string()).optional(),
        page_size: z.number().int().default(10),
    })
    .transform((v) => {
        return remap$(v, {
            page_size: "pageSize",
        });
    });

/** @internal */
export type ListDocumentsRequest$Outbound = {
    cursor?: string | null | undefined;
    page_size: number;
};

/** @internal */
export const ListDocumentsRequest$outboundSchema: z.ZodType<
    ListDocumentsRequest$Outbound,
    z.ZodTypeDef,
    ListDocumentsRequest
> = z
    .object({
        cursor: z.nullable(z.string()).optional(),
        pageSize: z.number().int().default(10),
    })
    .transform((v) => {
        return remap$(v, {
            pageSize: "page_size",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListDocumentsRequest$ {
    /** @deprecated use `ListDocumentsRequest$inboundSchema` instead. */
    export const inboundSchema = ListDocumentsRequest$inboundSchema;
    /** @deprecated use `ListDocumentsRequest$outboundSchema` instead. */
    export const outboundSchema = ListDocumentsRequest$outboundSchema;
    /** @deprecated use `ListDocumentsRequest$Outbound` instead. */
    export type Outbound = ListDocumentsRequest$Outbound;
}

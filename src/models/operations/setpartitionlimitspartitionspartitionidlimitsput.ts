/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest = {
  partitionId: string;
  partitionLimitParams: components.PartitionLimitParams;
};

/** @internal */
export const SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest$inboundSchema:
  z.ZodType<
    SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    partition_id: z.string(),
    PartitionLimitParams: components.PartitionLimitParams$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "partition_id": "partitionId",
      "PartitionLimitParams": "partitionLimitParams",
    });
  });

/** @internal */
export type SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest$Outbound = {
  partition_id: string;
  PartitionLimitParams: components.PartitionLimitParams$Outbound;
};

/** @internal */
export const SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest$outboundSchema:
  z.ZodType<
    SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest$Outbound,
    z.ZodTypeDef,
    SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest
  > = z.object({
    partitionId: z.string(),
    partitionLimitParams: components.PartitionLimitParams$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      partitionId: "partition_id",
      partitionLimitParams: "PartitionLimitParams",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest$ {
  /** @deprecated use `SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest$inboundSchema` instead. */
  export const inboundSchema =
    SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest$inboundSchema;
  /** @deprecated use `SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest$outboundSchema` instead. */
  export const outboundSchema =
    SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest$outboundSchema;
  /** @deprecated use `SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest$Outbound` instead. */
  export type Outbound =
    SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest$Outbound;
}

export function setPartitionLimitsPartitionsPartitionIdLimitsPutRequestToJSON(
  setPartitionLimitsPartitionsPartitionIdLimitsPutRequest:
    SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest,
): string {
  return JSON.stringify(
    SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest$outboundSchema
      .parse(setPartitionLimitsPartitionsPartitionIdLimitsPutRequest),
  );
}

export function setPartitionLimitsPartitionsPartitionIdLimitsPutRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'SetPartitionLimitsPartitionsPartitionIdLimitsPutRequest' from JSON`,
  );
}

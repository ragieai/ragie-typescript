/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteConnectionConnectionsConnectionIdDeletePostRequest = {
  connectionId: string;
  deleteConnectionPayload: components.DeleteConnectionPayload;
};

/** @internal */
export const DeleteConnectionConnectionsConnectionIdDeletePostRequest$inboundSchema:
  z.ZodType<
    DeleteConnectionConnectionsConnectionIdDeletePostRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    connection_id: z.string(),
    DeleteConnectionPayload: components.DeleteConnectionPayload$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "connection_id": "connectionId",
      "DeleteConnectionPayload": "deleteConnectionPayload",
    });
  });

/** @internal */
export type DeleteConnectionConnectionsConnectionIdDeletePostRequest$Outbound =
  {
    connection_id: string;
    DeleteConnectionPayload: components.DeleteConnectionPayload$Outbound;
  };

/** @internal */
export const DeleteConnectionConnectionsConnectionIdDeletePostRequest$outboundSchema:
  z.ZodType<
    DeleteConnectionConnectionsConnectionIdDeletePostRequest$Outbound,
    z.ZodTypeDef,
    DeleteConnectionConnectionsConnectionIdDeletePostRequest
  > = z.object({
    connectionId: z.string(),
    deleteConnectionPayload: components.DeleteConnectionPayload$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      connectionId: "connection_id",
      deleteConnectionPayload: "DeleteConnectionPayload",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteConnectionConnectionsConnectionIdDeletePostRequest$ {
  /** @deprecated use `DeleteConnectionConnectionsConnectionIdDeletePostRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteConnectionConnectionsConnectionIdDeletePostRequest$inboundSchema;
  /** @deprecated use `DeleteConnectionConnectionsConnectionIdDeletePostRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteConnectionConnectionsConnectionIdDeletePostRequest$outboundSchema;
  /** @deprecated use `DeleteConnectionConnectionsConnectionIdDeletePostRequest$Outbound` instead. */
  export type Outbound =
    DeleteConnectionConnectionsConnectionIdDeletePostRequest$Outbound;
}

export function deleteConnectionConnectionsConnectionIdDeletePostRequestToJSON(
  deleteConnectionConnectionsConnectionIdDeletePostRequest:
    DeleteConnectionConnectionsConnectionIdDeletePostRequest,
): string {
  return JSON.stringify(
    DeleteConnectionConnectionsConnectionIdDeletePostRequest$outboundSchema
      .parse(deleteConnectionConnectionsConnectionIdDeletePostRequest),
  );
}

export function deleteConnectionConnectionsConnectionIdDeletePostRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteConnectionConnectionsConnectionIdDeletePostRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteConnectionConnectionsConnectionIdDeletePostRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeleteConnectionConnectionsConnectionIdDeletePostRequest' from JSON`,
  );
}
